{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\edtech\\\\react\\\\src\\\\components\\\\questions\\\\Qlist.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./Qlist.css\";\nimport { Document, Packer, Paragraph, TextRun, ImageRun } from \"docx\";\nimport { saveAs } from \"file-saver\";\n\n// Helper: Convert MathJax SVG into PNG (base64)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction svgToPngBase64(svgElement) {\n  return new Promise(resolve => {\n    const svgData = new XMLSerializer().serializeToString(svgElement);\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = function () {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0);\n      resolve(canvas.toDataURL(\"image/png\"));\n    };\n    img.src = \"data:image/svg+xml;base64,\" + btoa(svgData);\n  });\n}\nexport default function Questions() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch questions from Django\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/questions/\").then(res => res.json()).then(data => {\n      setQuestions(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching questions:\", error);\n      setLoading(false);\n    });\n  }, []);\n\n  // Re-run MathJax after questions load\n  useEffect(() => {\n    if (window.MathJax) {\n      window.MathJax.typesetPromise();\n    }\n  }, [questions]);\n\n  // Handle download as Word\n  const downloadDocx = async () => {\n    const docChildren = [];\n    for (let q of questions) {\n      // Add question text\n      docChildren.push(new Paragraph({\n        children: [new TextRun({\n          text: `${q.subject} (${q.year})`,\n          bold: true\n        })]\n      }));\n\n      // Find MathJax SVGs inside this question card\n      //const container = document.getElementById(`question-${q.id}`);\n      //const svgs = container ? container.querySelectorAll(\"svg\") : [];\n\n      //   if (svgs.length > 0) {\n      //     for (let svg of svgs) {\n      //       const imgBase64 = await svgToPngBase64(svg);\n      //       docChildren.push(\n      //         new Paragraph({\n      //           children: [\n      //             new ImageRun({\n      //               data: imgBase64.split(\",\")[1], // remove \"data:image/png;base64,\"\n      //               transformation: { width: 200, height: 60 },\n      //               type: \"base64\",\n      //             }),\n      //           ],\n      //         })\n      //       );\n      //     }\n      //   } else \n      // fallback: plain text if no math\n      docChildren.push(new Paragraph(q.text.replace(/<\\/?[^>]+(>|$)/g, \"\")));\n      docChildren.push(new Paragraph(\"\")); // spacer\n    }\n    const doc = new Document({\n      sections: [{\n        properties: {\n          page: {\n            margin: {\n              top: 720,\n              right: 720,\n              bottom: 720,\n              left: 720\n            } // 0.5 inch\n          }\n        },\n        children: docChildren\n      }]\n    });\n    const blob = await Packer.toBlob(doc);\n    saveAs(blob, \"questions.docx\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"home\",\n    className: \"active\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"q-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"q-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: \"center\",\n              marginBottom: \"4px\"\n            },\n            children: \"THE KENYA NATIONAL EXAMINATIONS COUNCIL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              textAlign: \"center\",\n              margin: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Kenya Certificate of Secondary Education\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"center\",\n              marginTop: \"4px\"\n            },\n            children: \"101/2 \\u2014 Paper 2 \\u2014 ENGLISH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading questions...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this) : questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `question-${q.id}`,\n            className: \"question-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [q.subject, \" (\", q.year, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: q.text\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this)]\n          }, q.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadDocx,\n          disabled: loading,\n          children: \"Download as Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(Questions, \"HR1M/hT9Ib2rKZj7h5epxnb8gkg=\");\n_c = Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["useEffect","useState","Document","Packer","Paragraph","TextRun","ImageRun","saveAs","jsxDEV","_jsxDEV","svgToPngBase64","svgElement","Promise","resolve","svgData","XMLSerializer","serializeToString","canvas","document","createElement","ctx","getContext","img","Image","onload","width","height","drawImage","toDataURL","src","btoa","Questions","_s","questions","setQuestions","loading","setLoading","fetch","then","res","json","data","catch","error","console","window","MathJax","typesetPromise","downloadDocx","docChildren","q","push","children","text","subject","year","bold","replace","doc","sections","properties","page","margin","top","right","bottom","left","blob","toBlob","id","className","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginBottom","marginTop","map","dangerouslySetInnerHTML","__html","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/edtech/react/src/components/questions/Qlist.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport \"./Qlist.css\";\r\nimport { Document, Packer, Paragraph, TextRun, ImageRun } from \"docx\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\n// Helper: Convert MathJax SVG into PNG (base64)\r\nfunction svgToPngBase64(svgElement) {\r\n  return new Promise((resolve) => {\r\n    const svgData = new XMLSerializer().serializeToString(svgElement);\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const img = new Image();\r\n    img.onload = function () {\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      ctx.drawImage(img, 0, 0);\r\n      resolve(canvas.toDataURL(\"image/png\"));\r\n    };\r\n    img.src = \"data:image/svg+xml;base64,\" + btoa(svgData);\r\n  });\r\n}\r\n\r\nexport default function Questions() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch questions from Django\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/questions/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setQuestions(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching questions:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Re-run MathJax after questions load\r\n  useEffect(() => {\r\n    if (window.MathJax) {\r\n      window.MathJax.typesetPromise();\r\n    }\r\n  }, [questions]);\r\n\r\n  // Handle download as Word\r\n  const downloadDocx = async () => {\r\n    const docChildren = [];\r\n\r\n    for (let q of questions) {\r\n      // Add question text\r\n      docChildren.push(\r\n        new Paragraph({\r\n          children: [\r\n            new TextRun({ text: `${q.subject} (${q.year})`, bold: true }),\r\n          ],\r\n        })\r\n      );\r\n\r\n      // Find MathJax SVGs inside this question card\r\n      //const container = document.getElementById(`question-${q.id}`);\r\n      //const svgs = container ? container.querySelectorAll(\"svg\") : [];\r\n\r\n    //   if (svgs.length > 0) {\r\n    //     for (let svg of svgs) {\r\n    //       const imgBase64 = await svgToPngBase64(svg);\r\n    //       docChildren.push(\r\n    //         new Paragraph({\r\n    //           children: [\r\n    //             new ImageRun({\r\n    //               data: imgBase64.split(\",\")[1], // remove \"data:image/png;base64,\"\r\n    //               transformation: { width: 200, height: 60 },\r\n    //               type: \"base64\",\r\n    //             }),\r\n    //           ],\r\n    //         })\r\n    //       );\r\n    //     }\r\n    //   } else \r\n        // fallback: plain text if no math\r\n    docChildren.push(new Paragraph(q.text.replace(/<\\/?[^>]+(>|$)/g, \"\")));\r\n      \r\n\r\n      docChildren.push(new Paragraph(\"\")); // spacer\r\n    }\r\n\r\n    const doc = new Document({\r\n      sections: [\r\n        {\r\n          properties: {\r\n            page: {\r\n              margin: { top: 720, right: 720, bottom: 720, left: 720 }, // 0.5 inch\r\n            },\r\n          },\r\n          children: docChildren,\r\n        },\r\n      ],\r\n    });\r\n\r\n    const blob = await Packer.toBlob(doc);\r\n    saveAs(blob, \"questions.docx\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"home\" className=\"active\">\r\n\r\n         <div className=\"q-header\">\r\n            <div></div>\r\n            <div>\r\n            <div className=\"q-main\">\r\n\r\n\r\n                <h2 style={{ textAlign:\"center\", marginBottom:\"4px\" }}>THE KENYA NATIONAL EXAMINATIONS COUNCIL</h2>\r\n                <h4 style={{textAlign:\"center\", margin:0}}><strong>Kenya Certificate of Secondary Education</strong></h4>\r\n                <p style={{textAlign:\"center\", marginTop:\"4px\"}}>101/2 — Paper 2 — ENGLISH</p>\r\n                <hr/>\r\n              \r\n                {loading ? (\r\n                <p>Loading questions...</p>\r\n                ) : (\r\n                questions.map((q) => (\r\n                    <div\r\n                    key={q.id}\r\n                    id={`question-${q.id}`}\r\n                    className=\"question-card\"\r\n                    >\r\n                    <strong>\r\n                        {q.subject} ({q.year})\r\n                    </strong>\r\n                    <br />\r\n                    <span\r\n                        dangerouslySetInnerHTML={{ __html: q.text }}\r\n                    />\r\n                    </div>\r\n                ))\r\n                )}\r\n              \r\n                    \r\n\r\n\r\n\r\n\r\n            </div>\r\n            </div>\r\n            <div></div>\r\n          </div>\r\n\r\n\r\n\r\n      <div className=\"container\">\r\n        <div className=\"content-wrapper\">\r\n\r\n        \r\n\r\n\r\n\r\n\r\n         \r\n          <button onClick={downloadDocx} disabled={loading}>\r\n            Download as Word\r\n          </button>\r\n\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}