{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE = \"http://127.0.0.1:8000/api\";\n\n// Keep access token in memory (XSS-hardened vs localStorage)\nlet accessToken = null;\nexport const setAccessToken = t => {\n  accessToken = t;\n};\nexport const clearAccessToken = () => {\n  accessToken = null;\n};\nconst api = axios.create({\n  baseURL: API_BASE,\n  withCredentials: true // send/receive cookies (refresh cookie)\n});\n\n// Attach access token\napi.interceptors.request.use(config => {\n  if (accessToken) config.headers.Authorization = `Bearer ${accessToken}`;\n  return config;\n});\n\n// Refresh on 401\nlet isRefreshing = false;\nlet pending = [];\nconst queue = (resolve, reject) => pending.push({\n  resolve,\n  reject\n});\nconst flushQueue = (error, token = null) => {\n  pending.forEach(p => token ? p.resolve(token) : p.reject(error));\n  pending = [];\n};\napi.interceptors.response.use(res => res, async err => {\n  const original = err.config;\n  if (err.response && err.response.status === 401 && !original._retry) {\n    original._retry = true;\n    if (isRefreshing) {\n      return new Promise((resolve, reject) => queue(resolve, reject)).then(token => {\n        original.headers.Authorization = `Bearer ${token}`;\n        return api(original);\n      });\n    }\n    isRefreshing = true;\n    try {\n      // Our refresh endpoint reads the refresh cookie; no body needed\n      const {\n        data\n      } = await axios.post(`${API_BASE}/token/refresh/`, {}, {\n        withCredentials: true\n      });\n      setAccessToken(data.access);\n      flushQueue(null, data.access);\n      isRefreshing = false;\n      original.headers.Authorization = `Bearer ${data.access}`;\n      return api(original);\n    } catch (refreshErr) {\n      isRefreshing = false;\n      flushQueue(refreshErr, null);\n      clearAccessToken();\n      // Optionally redirect to login page here\n      return Promise.reject(refreshErr);\n    }\n  }\n  return Promise.reject(err);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE","accessToken","setAccessToken","t","clearAccessToken","api","create","baseURL","withCredentials","interceptors","request","use","config","headers","Authorization","isRefreshing","pending","queue","resolve","reject","push","flushQueue","error","token","forEach","p","response","res","err","original","status","_retry","Promise","then","data","post","access","refreshErr"],"sources":["C:/Users/Administrator/Desktop/edtech/react/src/api/client.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE = \"http://127.0.0.1:8000/api\";\r\n\r\n// Keep access token in memory (XSS-hardened vs localStorage)\r\nlet accessToken = null;\r\nexport const setAccessToken = (t) => { accessToken = t; };\r\nexport const clearAccessToken = () => { accessToken = null; };\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE,\r\n  withCredentials: true, // send/receive cookies (refresh cookie)\r\n});\r\n\r\n// Attach access token\r\napi.interceptors.request.use((config) => {\r\n  if (accessToken) config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n});\r\n\r\n// Refresh on 401\r\nlet isRefreshing = false;\r\nlet pending = [];\r\n\r\nconst queue = (resolve, reject) => pending.push({ resolve, reject });\r\nconst flushQueue = (error, token = null) => {\r\n  pending.forEach(p => (token ? p.resolve(token) : p.reject(error)));\r\n  pending = [];\r\n};\r\n\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  async (err) => {\r\n    const original = err.config;\r\n    if (err.response && err.response.status === 401 && !original._retry) {\r\n      original._retry = true;\r\n\r\n      if (isRefreshing) {\r\n        return new Promise((resolve, reject) => queue(resolve, reject))\r\n          .then((token) => {\r\n            original.headers.Authorization = `Bearer ${token}`;\r\n            return api(original);\r\n          });\r\n      }\r\n\r\n      isRefreshing = true;\r\n      try {\r\n        // Our refresh endpoint reads the refresh cookie; no body needed\r\n        const { data } = await axios.post(`${API_BASE}/token/refresh/`, {}, { withCredentials: true });\r\n        setAccessToken(data.access);\r\n        flushQueue(null, data.access);\r\n        isRefreshing = false;\r\n\r\n        original.headers.Authorization = `Bearer ${data.access}`;\r\n        return api(original);\r\n      } catch (refreshErr) {\r\n        isRefreshing = false;\r\n        flushQueue(refreshErr, null);\r\n        clearAccessToken();\r\n        // Optionally redirect to login page here\r\n        return Promise.reject(refreshErr);\r\n      }\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}