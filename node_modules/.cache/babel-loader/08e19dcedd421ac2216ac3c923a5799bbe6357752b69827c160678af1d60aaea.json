{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\code\\\\edu\\\\src\\\\quiz\\\\QuizTwo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './QuizComponent.css';\n\n// Mock data - you can replace this with your Django API call\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockQuestions = [{\n  id: 1,\n  question: \"What is the capital of France?\",\n  options: [\"London\", \"Berlin\", \"Paris\", \"Madrid\"],\n  correctAnswer: 2 // Index of correct answer (Paris)\n}, {\n  id: 2,\n  question: \"Which planet is known as the Red Planet?\",\n  options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\n  correctAnswer: 1 // Index of correct answer (Mars)\n}, {\n  id: 3,\n  question: \"What is the largest ocean on Earth?\",\n  options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Arctic Ocean\", \"Pacific Ocean\"],\n  correctAnswer: 3 // Index of correct answer (Pacific Ocean)\n}, {\n  id: 4,\n  question: \"Who wrote 'Romeo and Juliet'?\",\n  options: [\"Charles Dickens\", \"William Shakespeare\", \"Jane Austen\", \"Mark Twain\"],\n  correctAnswer: 1 // Index of correct answer (William Shakespeare)\n}, {\n  id: 5,\n  question: \"What is the chemical symbol for gold?\",\n  options: [\"Ag\", \"Au\", \"Fe\", \"Cu\"],\n  correctAnswer: 1 // Index of correct answer (Au)\n}];\nconst QuizComponent = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Simulate API call with setTimeout\n    const fetchQuestions = async () => {\n      setLoading(true);\n      try {\n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        setQuestions(mockQuestions);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleOptionSelect = optionIndex => {\n    if (!isSubmitted) {\n      setUserAnswers(prev => ({\n        ...prev,\n        [currentQuestionIndex]: optionIndex\n      }));\n    }\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n  const handleSubmit = () => {\n    let correctAnswers = 0;\n    questions.forEach((question, index) => {\n      if (userAnswers[index] === question.correctAnswer) {\n        correctAnswers++;\n      }\n    });\n    const finalScore = Math.round(correctAnswers / questions.length * 100);\n    setScore(finalScore);\n    setIsSubmitted(true);\n  };\n  const handleRestart = () => {\n    setCurrentQuestionIndex(0);\n    setUserAnswers({});\n    setIsSubmitted(false);\n    setScore(0);\n  };\n  const getCurrentQuestion = () => {\n    return questions[currentQuestionIndex];\n  };\n  const isOptionSelected = optionIndex => {\n    return userAnswers[currentQuestionIndex] === optionIndex;\n  };\n  const isOptionCorrect = optionIndex => {\n    if (!isSubmitted) return false;\n    return optionIndex === getCurrentQuestion().correctAnswer;\n  };\n  const isOptionIncorrect = optionIndex => {\n    if (!isSubmitted) return false;\n    return userAnswers[currentQuestionIndex] === optionIndex && optionIndex !== getCurrentQuestion().correctAnswer;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n  if (isSubmitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Quiz Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your Score: \", score, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You got \", Math.round(score / 100 * questions.length), \" out of \", questions.length, \" questions correct!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-review\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Question Review:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Question \", index + 1, \": \", question.question]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-review\",\n              children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `option-review ${optionIndex === question.correctAnswer ? 'correct' : userAnswers[index] === optionIndex ? 'incorrect' : ''}`,\n                children: [option, optionIndex === question.correctAnswer && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"correct-mark\",\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 66\n                }, this), userAnswers[index] === optionIndex && optionIndex !== question.correctAnswer && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"incorrect-mark\",\n                  children: \"\\u2717\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 25\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-btn\",\n          onClick: handleRestart,\n          children: \"Take Quiz Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-image1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/templatemo-futuristic-girl.jpg\",\n          alt: \"Modern Technology Interaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: getCurrentQuestion().question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: getCurrentQuestion().options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `option ${isOptionSelected(index) ? 'selected' : ''} ${isOptionCorrect(index) ? 'correct' : ''} ${isOptionIncorrect(index) ? 'incorrect' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${currentQuestionIndex}`,\n              value: index,\n              checked: isOptionSelected(index),\n              onChange: () => handleOptionSelect(index),\n              disabled: isSubmitted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-text\",\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: getCurrentQuestion().question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: getCurrentQuestion().options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `option ${isOptionSelected(index) ? 'selected' : ''} ${isOptionCorrect(index) ? 'correct' : ''} ${isOptionIncorrect(index) ? 'incorrect' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${currentQuestionIndex}`,\n            value: index,\n            checked: isOptionSelected(index),\n            onChange: () => handleOptionSelect(index),\n            disabled: isSubmitted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"option-text\",\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn prev-btn\",\n        onClick: handlePrevious,\n        disabled: currentQuestionIndex === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-indicators\",\n        children: questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `indicator ${index === currentQuestionIndex ? 'active' : ''} ${userAnswers[index] !== undefined ? 'answered' : ''}`,\n          onClick: () => setCurrentQuestionIndex(index),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), currentQuestionIndex === questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn submit-btn\",\n        onClick: handleSubmit,\n        disabled: Object.keys(userAnswers).length < questions.length,\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn next-btn\",\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizComponent, \"JTI+HemFrka/Rw1xOUAftT+paHg=\");\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","mockQuestions","id","question","options","correctAnswer","QuizComponent","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","isSubmitted","setIsSubmitted","score","setScore","loading","setLoading","fetchQuestions","Promise","resolve","setTimeout","error","console","handleOptionSelect","optionIndex","prev","handleNext","length","handlePrevious","handleSubmit","correctAnswers","forEach","index","finalScore","Math","round","handleRestart","getCurrentQuestion","isOptionSelected","isOptionCorrect","isOptionIncorrect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","onClick","src","alt","type","name","value","checked","onChange","disabled","_","undefined","Object","keys","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/code/edu/src/quiz/QuizTwo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './QuizComponent.css';\r\n\r\n// Mock data - you can replace this with your Django API call\r\nconst mockQuestions = [\r\n  {\r\n    id: 1,\r\n    question: \"What is the capital of France?\",\r\n    options: [\"London\", \"Berlin\", \"Paris\", \"Madrid\"],\r\n    correctAnswer: 2 // Index of correct answer (Paris)\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"Which planet is known as the Red Planet?\",\r\n    options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\r\n    correctAnswer: 1 // Index of correct answer (Mars)\r\n  },\r\n  {\r\n    id: 3,\r\n    question: \"What is the largest ocean on Earth?\",\r\n    options: [\"Atlantic Ocean\", \"Indian Ocean\", \"Arctic Ocean\", \"Pacific Ocean\"],\r\n    correctAnswer: 3 // Index of correct answer (Pacific Ocean)\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Who wrote 'Romeo and Juliet'?\",\r\n    options: [\"Charles Dickens\", \"William Shakespeare\", \"Jane Austen\", \"Mark Twain\"],\r\n    correctAnswer: 1 // Index of correct answer (William Shakespeare)\r\n  },\r\n  {\r\n    id: 5,\r\n    question: \"What is the chemical symbol for gold?\",\r\n    options: [\"Ag\", \"Au\", \"Fe\", \"Cu\"],\r\n    correctAnswer: 1 // Index of correct answer (Au)\r\n  }\r\n];\r\n\r\nconst QuizComponent = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Simulate API call with setTimeout\r\n    const fetchQuestions = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Simulate API delay\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        setQuestions(mockQuestions);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleOptionSelect = (optionIndex) => {\r\n    if (!isSubmitted) {\r\n      setUserAnswers(prev => ({\r\n        ...prev,\r\n        [currentQuestionIndex]: optionIndex\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let correctAnswers = 0;\r\n    questions.forEach((question, index) => {\r\n      if (userAnswers[index] === question.correctAnswer) {\r\n        correctAnswers++;\r\n      }\r\n    });\r\n    \r\n    const finalScore = Math.round((correctAnswers / questions.length) * 100);\r\n    setScore(finalScore);\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setCurrentQuestionIndex(0);\r\n    setUserAnswers({});\r\n    setIsSubmitted(false);\r\n    setScore(0);\r\n  };\r\n\r\n  const getCurrentQuestion = () => {\r\n    return questions[currentQuestionIndex];\r\n  };\r\n\r\n  const isOptionSelected = (optionIndex) => {\r\n    return userAnswers[currentQuestionIndex] === optionIndex;\r\n  };\r\n\r\n  const isOptionCorrect = (optionIndex) => {\r\n    if (!isSubmitted) return false;\r\n    return optionIndex === getCurrentQuestion().correctAnswer;\r\n  };\r\n\r\n  const isOptionIncorrect = (optionIndex) => {\r\n    if (!isSubmitted) return false;\r\n    return userAnswers[currentQuestionIndex] === optionIndex && \r\n           optionIndex !== getCurrentQuestion().correctAnswer;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"quiz-container\">\r\n        <div className=\"loading\">Loading questions...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isSubmitted) {\r\n    return (\r\n      <div className=\"quiz-container\">\r\n        <div className=\"results\">\r\n          <h2>Quiz Results</h2>\r\n          <div className=\"score\">\r\n            <h3>Your Score: {score}%</h3>\r\n            <p>You got {Math.round((score / 100) * questions.length)} out of {questions.length} questions correct!</p>\r\n          </div>\r\n          \r\n          <div className=\"question-review\">\r\n            <h3>Question Review:</h3>\r\n            {questions.map((question, index) => (\r\n              <div key={question.id} className=\"review-item\">\r\n                <h4>Question {index + 1}: {question.question}</h4>\r\n                <div className=\"options-review\">\r\n                  {question.options.map((option, optionIndex) => (\r\n                    <div \r\n                      key={optionIndex} \r\n                      className={`option-review ${\r\n                        optionIndex === question.correctAnswer ? 'correct' : \r\n                        userAnswers[index] === optionIndex ? 'incorrect' : ''\r\n                      }`}\r\n                    >\r\n                      {option}\r\n                      {optionIndex === question.correctAnswer && <span className=\"correct-mark\">✓</span>}\r\n                      {userAnswers[index] === optionIndex && optionIndex !== question.correctAnswer && \r\n                        <span className=\"incorrect-mark\">✗</span>}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <button className=\"restart-btn\" onClick={handleRestart}>\r\n            Take Quiz Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <div className=\"quiz-header\">\r\n        <h2>Quiz</h2>\r\n        <div className=\"progress\">\r\n          Question {currentQuestionIndex + 1} of {questions.length}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='quiz-div'>\r\n        <div className=\"quiz-image1\">\r\n            <img src=\"images/templatemo-futuristic-girl.jpg\" alt=\"Modern Technology Interaction\" />\r\n        </div>\r\n        <div>\r\n            <h3>{getCurrentQuestion().question}</h3>\r\n            <div className=\"options\">\r\n          {getCurrentQuestion().options.map((option, index) => (\r\n            <label \r\n              key={index} \r\n              className={`option ${\r\n                isOptionSelected(index) ? 'selected' : ''\r\n              } ${\r\n                isOptionCorrect(index) ? 'correct' : ''\r\n              } ${\r\n                isOptionIncorrect(index) ? 'incorrect' : ''\r\n              }`}\r\n            >\r\n              <input\r\n                type=\"radio\"\r\n                name={`question-${currentQuestionIndex}`}\r\n                value={index}\r\n                checked={isOptionSelected(index)}\r\n                onChange={() => handleOptionSelect(index)}\r\n                disabled={isSubmitted}\r\n              />\r\n              <span className=\"option-text\">{option}</span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"question-container\">\r\n        <h3>{getCurrentQuestion().question}</h3>\r\n        \r\n        <div className=\"options\">\r\n          {getCurrentQuestion().options.map((option, index) => (\r\n            <label \r\n              key={index} \r\n              className={`option ${\r\n                isOptionSelected(index) ? 'selected' : ''\r\n              } ${\r\n                isOptionCorrect(index) ? 'correct' : ''\r\n              } ${\r\n                isOptionIncorrect(index) ? 'incorrect' : ''\r\n              }`}\r\n            >\r\n              <input\r\n                type=\"radio\"\r\n                name={`question-${currentQuestionIndex}`}\r\n                value={index}\r\n                checked={isOptionSelected(index)}\r\n                onChange={() => handleOptionSelect(index)}\r\n                disabled={isSubmitted}\r\n              />\r\n              <span className=\"option-text\">{option}</span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation\">\r\n        <button \r\n          className=\"nav-btn prev-btn\" \r\n          onClick={handlePrevious}\r\n          disabled={currentQuestionIndex === 0}\r\n        >\r\n          Previous\r\n        </button>\r\n        \r\n        <div className=\"question-indicators\">\r\n          {questions.map((_, index) => (\r\n            <button\r\n              key={index}\r\n              className={`indicator ${index === currentQuestionIndex ? 'active' : ''} ${\r\n                userAnswers[index] !== undefined ? 'answered' : ''\r\n              }`}\r\n              onClick={() => setCurrentQuestionIndex(index)}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {currentQuestionIndex === questions.length - 1 ? (\r\n          <button \r\n            className=\"nav-btn submit-btn\" \r\n            onClick={handleSubmit}\r\n            disabled={Object.keys(userAnswers).length < questions.length}\r\n          >\r\n            Submit Quiz\r\n          </button>\r\n        ) : (\r\n          <button \r\n            className=\"nav-btn next-btn\" \r\n            onClick={handleNext}\r\n          >\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}