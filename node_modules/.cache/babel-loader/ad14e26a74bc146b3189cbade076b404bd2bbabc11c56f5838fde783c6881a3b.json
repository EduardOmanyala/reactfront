{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\edtech\\\\react\\\\src\\\\components\\\\Qlist.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"quiz/QuizComponent.css\";\nimport { Document, Packer, Paragraph, TextRun, ImageRun } from \"docx\";\nimport { saveAs } from \"file-saver\";\n\n// Helper: Convert MathJax SVG into PNG (base64)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction svgToPngBase64(svgElement) {\n  return new Promise(resolve => {\n    const svgData = new XMLSerializer().serializeToString(svgElement);\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = function () {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0);\n      resolve(canvas.toDataURL(\"image/png\"));\n    };\n    img.src = \"data:image/svg+xml;base64,\" + btoa(svgData);\n  });\n}\nexport default function Questions() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch questions from Django\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/questions/\").then(res => res.json()).then(data => {\n      setQuestions(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching questions:\", error);\n      setLoading(false);\n    });\n  }, []);\n\n  // Re-run MathJax after questions load\n  useEffect(() => {\n    if (window.MathJax) {\n      window.MathJax.typesetPromise();\n    }\n  }, [questions]);\n\n  // Handle download as Word\n  const downloadDocx = async () => {\n    const docChildren = [];\n    for (let q of questions) {\n      // Add question text\n      docChildren.push(new Paragraph({\n        children: [new TextRun({\n          text: `${q.subject} (${q.year})`,\n          bold: true\n        })]\n      }));\n\n      // Find MathJax SVGs inside this question card\n      const container = document.getElementById(`question-${q.id}`);\n      const svgs = container ? container.querySelectorAll(\"svg\") : [];\n      if (svgs.length > 0) {\n        for (let svg of svgs) {\n          const imgBase64 = await svgToPngBase64(svg);\n          docChildren.push(new Paragraph({\n            children: [new ImageRun({\n              data: imgBase64.split(\",\")[1],\n              // remove \"data:image/png;base64,\"\n              transformation: {\n                width: 200,\n                height: 60\n              },\n              type: \"base64\"\n            })]\n          }));\n        }\n      } else {\n        // fallback: plain text if no math\n        docChildren.push(new Paragraph(q.text.replace(/<\\/?[^>]+(>|$)/g, \"\")));\n      }\n      docChildren.push(new Paragraph(\"\")); // spacer\n    }\n    const doc = new Document({\n      sections: [{\n        properties: {\n          page: {\n            margin: {\n              top: 720,\n              right: 720,\n              bottom: 720,\n              left: 720\n            } // 0.5 inch\n          }\n        },\n        children: docChildren\n      }]\n    });\n    const blob = await Packer.toBlob(doc);\n    saveAs(blob, \"questions.docx\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"home\",\n    className: \"page active\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: [\"Question 1 of \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadDocx,\n          disabled: loading,\n          children: \"Download as Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-questions\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading questions...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this) : questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `question-${q.id}`,\n            className: \"question-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [q.subject, \" (\", q.year, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: q.text\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)]\n          }, q.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Questions, \"HR1M/hT9Ib2rKZj7h5epxnb8gkg=\");\n_c = Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["useEffect","useState","Document","Packer","Paragraph","TextRun","ImageRun","saveAs","jsxDEV","_jsxDEV","svgToPngBase64","svgElement","Promise","resolve","svgData","XMLSerializer","serializeToString","canvas","document","createElement","ctx","getContext","img","Image","onload","width","height","drawImage","toDataURL","src","btoa","Questions","_s","questions","setQuestions","loading","setLoading","fetch","then","res","json","data","catch","error","console","window","MathJax","typesetPromise","downloadDocx","docChildren","q","push","children","text","subject","year","bold","container","getElementById","id","svgs","querySelectorAll","length","svg","imgBase64","split","transformation","type","replace","doc","sections","properties","page","margin","top","right","bottom","left","blob","toBlob","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/edtech/react/src/components/Qlist.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"quiz/QuizComponent.css\";\r\nimport { Document, Packer, Paragraph, TextRun, ImageRun } from \"docx\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\n// Helper: Convert MathJax SVG into PNG (base64)\r\nfunction svgToPngBase64(svgElement) {\r\n  return new Promise((resolve) => {\r\n    const svgData = new XMLSerializer().serializeToString(svgElement);\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const img = new Image();\r\n    img.onload = function () {\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      ctx.drawImage(img, 0, 0);\r\n      resolve(canvas.toDataURL(\"image/png\"));\r\n    };\r\n    img.src = \"data:image/svg+xml;base64,\" + btoa(svgData);\r\n  });\r\n}\r\n\r\nexport default function Questions() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch questions from Django\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:8000/questions/\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setQuestions(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching questions:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Re-run MathJax after questions load\r\n  useEffect(() => {\r\n    if (window.MathJax) {\r\n      window.MathJax.typesetPromise();\r\n    }\r\n  }, [questions]);\r\n\r\n  // Handle download as Word\r\n  const downloadDocx = async () => {\r\n    const docChildren = [];\r\n\r\n    for (let q of questions) {\r\n      // Add question text\r\n      docChildren.push(\r\n        new Paragraph({\r\n          children: [\r\n            new TextRun({ text: `${q.subject} (${q.year})`, bold: true }),\r\n          ],\r\n        })\r\n      );\r\n\r\n      // Find MathJax SVGs inside this question card\r\n      const container = document.getElementById(`question-${q.id}`);\r\n      const svgs = container ? container.querySelectorAll(\"svg\") : [];\r\n\r\n      if (svgs.length > 0) {\r\n        for (let svg of svgs) {\r\n          const imgBase64 = await svgToPngBase64(svg);\r\n          docChildren.push(\r\n            new Paragraph({\r\n              children: [\r\n                new ImageRun({\r\n                  data: imgBase64.split(\",\")[1], // remove \"data:image/png;base64,\"\r\n                  transformation: { width: 200, height: 60 },\r\n                  type: \"base64\",\r\n                }),\r\n              ],\r\n            })\r\n          );\r\n        }\r\n      } else {\r\n        // fallback: plain text if no math\r\n        docChildren.push(new Paragraph(q.text.replace(/<\\/?[^>]+(>|$)/g, \"\")));\r\n      }\r\n\r\n      docChildren.push(new Paragraph(\"\")); // spacer\r\n    }\r\n\r\n    const doc = new Document({\r\n      sections: [\r\n        {\r\n          properties: {\r\n            page: {\r\n              margin: { top: 720, right: 720, bottom: 720, left: 720 }, // 0.5 inch\r\n            },\r\n          },\r\n          children: docChildren,\r\n        },\r\n      ],\r\n    });\r\n\r\n    const blob = await Packer.toBlob(doc);\r\n    saveAs(blob, \"questions.docx\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"home\" className=\"page active\">\r\n      <div className=\"container\">\r\n        <div className=\"content-wrapper\">\r\n          <div className=\"quiz-header\">\r\n            <h2>Quiz</h2>\r\n            <div className=\"progress\">Question 1 of {questions.length}</div>\r\n          </div>\r\n\r\n          <button onClick={downloadDocx} disabled={loading}>\r\n            Download as Word\r\n          </button>\r\n\r\n          <div className=\"quiz-questions\">\r\n            {loading ? (\r\n              <p>Loading questions...</p>\r\n            ) : (\r\n              questions.map((q) => (\r\n                <div\r\n                  key={q.id}\r\n                  id={`question-${q.id}`}\r\n                  className=\"question-card\"\r\n                >\r\n                  <strong>\r\n                    {q.subject} ({q.year})\r\n                  </strong>\r\n                  <br />\r\n                  <span\r\n                    dangerouslySetInnerHTML={{ __html: q.text }}\r\n                  />\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}