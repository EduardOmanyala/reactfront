{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\edtech\\\\react\\\\src\\\\api\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { login as apiLogin, logout as apiLogout, getMe } from \"./auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // On first load, try to fetch user (uses refresh cookie behind the scenes)\n  useEffect(() => {\n    const checkUser = async () => {\n      try {\n        setError(null);\n        const me = await getMe();\n        setUser(me);\n      } catch (err) {\n        console.log(\"No valid session found:\", err.message);\n        setUser(null);\n        setError(null); // Don't show error on initial load\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkUser();\n  }, []);\n\n  // Wrap login so it sets user\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      setLoading(true);\n      await apiLogin(email, password);\n      const me = await getMe();\n      setUser(me);\n      return me;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || \"Login failed\");\n      setUser(null);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Wrap logout so it clears user\n  const logout = async () => {\n    try {\n      setError(null);\n      await apiLogout();\n    } catch (err) {\n      console.error(\"Logout error:\", err);\n    } finally {\n      setUser(null);\n      setError(null);\n    }\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    error,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","login","apiLogin","logout","apiLogout","getMe","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","checkUser","me","err","console","log","message","email","password","_err$response","_err$response$data","response","data","detail","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/edtech/react/src/api/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { login as apiLogin, logout as apiLogout, getMe } from \"./auth\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // On first load, try to fetch user (uses refresh cookie behind the scenes)\r\n  useEffect(() => {\r\n    const checkUser = async () => {\r\n      try {\r\n        setError(null);\r\n        const me = await getMe();\r\n        setUser(me);\r\n      } catch (err) {\r\n        console.log(\"No valid session found:\", err.message);\r\n        setUser(null);\r\n        setError(null); // Don't show error on initial load\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    checkUser();\r\n  }, []);\r\n\r\n  // Wrap login so it sets user\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      await apiLogin(email, password);\r\n      const me = await getMe();\r\n      setUser(me);\r\n      return me;\r\n    } catch (err) {\r\n      setError(err.response?.data?.detail || \"Login failed\");\r\n      setUser(null);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Wrap logout so it clears user\r\n  const logout = async () => {\r\n    try {\r\n      setError(null);\r\n      await apiLogout();\r\n    } catch (err) {\r\n      console.error(\"Logout error:\", err);\r\n    } finally {\r\n      setUser(null);\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    logout,\r\n    loading,\r\n    error,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}